@mixin padding-mixin($pt, $pr, $pb, $pl) {
  padding: $pt $pr $pb $pl;
}

@mixin input-color-states {
  &.error {
    color: var(--ac-label-input-error);
  }

  &.warning {
    color: var(--ac-label-input-warning);
  }

  &.success {
    color: var(--ac-label-input-success);
  }
}

@mixin description-color-states {
  &.error {
    color: var(--ac-description-input-error);
  }

  &.warning {
    color: var(--ac-description-input-warning);
  }

  &.success {
    color: var(--ac-description-input-success);
  }
}

@mixin input-border-color-states {
  &.error {
    border-color: var(--ac-input-error-stroke);
    background-color: var(--ac-input-error-bg);
    color: var(--ac-input-error-text);
  }

  &.warning {
    border-color: var(--ac-input-warning-stroke);
    background-color: var(--ac-input-warning-bg);
    color: var(--ac-input-warning-text);
  }

  &.success {
    border-color: var(--ac-input-success-stroke);
    background-color: var(--ac-input-success-bg);
    color: var(--ac-input-success-text);
  }
}

@mixin font-styles {
  font-size: var(--body1-medium-font-size);
  font-weight: var(--body1-medium-font-weight);
  line-height: var(--body1-medium-line-height);
  letter-spacing: var(--body1-medium-letter-spacing);
  text-decoration: var(--body1-medium-text-decoration);
}

.input-wrapper {
  font-family: var(--font-families-pt-root-ui);
  position: relative;

  input:focus ~ label,
  textarea:focus ~ label,
  input:not(:placeholder-shown):not(:focus) ~ label,
  textarea:not(:placeholder-shown):not(:focus) ~ label {
    top: -6px;
    left: 12px;
    line-height: 11px;
    background: linear-gradient(to top, var(--default-second) 50%, transparent 50%);

    @include padding-mixin(var(--0-space), var(--4-space), var(--0-space), var(--4-space));
  }

  input:focus ~ label,
  textarea:focus ~ label {
    color: var(--ac-label-input-focused);

    @include input-color-states;
  }

  input:not(:placeholder-shown):not(:focus):disabled ~ label,
  textarea:not(:placeholder-shown):not(:focus):disabled ~ label {
    background: linear-gradient(to top, var(--text-grey-50) 50%, transparent 50%);
  }

  input:not(:placeholder-shown),
  textarea:not(:placeholder-shown),
  input:not(:focus),
  textarea:not(:focus) {
    &::placeholder {
      visibility: hidden;
    }
  }
}

.text-field {
  width: 100%;
  height: var(--40-size);
  color: var(--ac-input-default-text);
  box-sizing: border-box;
  font-family: inherit;
  @include font-styles;
  border-radius: var(--4-radius);
  z-index: 2;
  border: var(--1-border) solid var(--ac-input-default-stroke);
  outline: none;
  background: var(--ac-input-default-bg);
  font-variant-numeric: tabular-nums lining-nums;
  padding: 0 var(--16-space);
  @include input-border-color-states;

  &::placeholder {
    @include font-styles;
    color: var(--ac-label-input-default);
  }

  &.input-with-icon {
    padding-right: 36px;
  }

  &.compact {
    height: var(--32-size);

    ~ label {
      @include padding-mixin(5px, var(--16-space), 5px, var(--16-space));
    }

    ~ .icon {
      height: var(--24-size);
    }
  }

  &.extra-compact {
    height: var(--28-size);

    ~ label {
      @include padding-mixin(4px, var(--16-space), 4px, var(--16-space));
    }

    ~ .icon {
      height: var(--16-size);
      padding-top: 2px;
    }
  }

  &:hover {
    border-color: var(--ac-input-hover-stroke);
    background-color: var(--ac-input-hover-bg);
    color: var(--ac-input-hover-text);

    @include input-border-color-states;
  }

  &:disabled {
    border-color: var(--ac-input-disabled-stroke);
    background-color: var(--ac-input-disabled-bg);
    -webkit-text-fill-color: var(--ac-input-disabled-text);
    color: var(--ac-input-disabled-text);
  }

  &:focus {
    border-color: var(--ac-input-focused-stroke);

    @include input-border-color-states;
  }
}

.textarea {
  min-height: var(--80-size);
  display: inline-block;
  overflow: auto;
  resize: none;
  padding: var(--8-space) var(--16-space);

  &.resize {
    resize: both;
  }

  ::-webkit-resizer {
    display: none;
  }

}

.label {
  position: absolute;
  padding: 10px var(--16-space);
  left: 0;
  color: var(--ac-label-input-default);

  cursor: text;
  transition: 100ms ease-out;

  @include input-color-states;

  .typography {
    line-height: inherit;
    margin: 0;
  }
}

.icon {
  position: absolute;
  inset-inline-end: var(--4-space);
  inset-block-start: var(--4-space);
  height: var(--32-size);
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--ac-input-default-text);
  cursor: pointer;
  background: var(--default-second);
  @include input-color-states;
}

.helper-text {
  display: flex;
  margin: 0;
  padding-top: var(--4-space);
  padding-left: var(--16-space);
  color: var(--ac-description-input-default);

  @include description-color-states;
}

.disabled {
  color: var(--text-grey-500);
  background-color: var(--text-grey-50);
  cursor: default;

  &-input {
    pointer-events: none !important;
  }
}

.colored {
  background-color: var(--ac-input-renew-bg) !important;
}
