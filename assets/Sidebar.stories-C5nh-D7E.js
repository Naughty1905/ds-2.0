import{j as a,a as r}from"./jsx-runtime-2xDJh5tt.js";import{r as p}from"./index-CBqU2yxZ.js";import{a7 as e}from"./index-BTGymsfC.js";import{a as z}from"./argsTypes-BC49l9Pk.js";import"./_commonjsHelpers-BosuxZz1.js";import"./generateUUID-1cqmAxQg.js";import"./clsx.m-CH7BE6MN.js";import"./index-CkVMA9Py.js";import"./32-oKJmtLZM.js";import"./index-D1sOrwww.js";import"./index-BulafiJ9.js";import"./index-BqvJ5JrJ.js";import"./index-BtM5VmRH.js";import"./types-CpBSVUgC.js";import"./index-Dd2IALEV.js";import"./index-4J70fF5O.js";import"./index-BGOHbkSJ.js";import"./index-Dp7-Jy-a.js";import"./index-D8kVD15d.js";import"./get-DbIoSxMH.js";const M="_wrapper_g6opq_1",N={wrapper:M},O=o=>a("div",{className:N.wrapper,children:o()}),m="https://images.unsplash.com/photo-1683343946402-85b144e8ecb6?q=80&w=3570&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",Y={title:"Components/Sidebar/Stories",component:e,decorators:[O],argTypes:z,parameters:{layout:"fullscreen"}},n=o=>{const[L,u]=p.useState(!1),[f,t]=p.useState("");return p.useEffect(()=>u(!!o.isLoggedIn),[o.isLoggedIn]),r(e,{orientation:"vertical",allowFavorites:!0,...o,isLoggedIn:L,onLogout:()=>u(!1),onLogin:()=>u(!0),currentPath:f,children:[a(e.Avatar,{imageSrc:""}),r(e.MenuItem,{path:"cars",label:"cars",position:"top",icon:"IconKovsh32",onClick:()=>t("cars"),children:[a(e.SubmenuItem,{path:"porsche",label:"porsche",image:m,onClick:()=>t("porsche")}),r(e.SubmenuItem,{path:"volksvagen",label:"volksvagen",image:m,onClick:()=>t("volksvagen"),children:[a(e.SubmenuItem,{path:"polo",label:"polo",onClick:()=>t("polo")}),a(e.SubmenuItem,{path:"tiguan",label:"tiguan",onClick:()=>t("tiguan")}),a(e.SubmenuItem,{path:"multivan",label:"multivan",onClick:()=>t("multivan"),disabled:!0})]}),r(e.SubmenuItem,{path:"toyota",label:"toyota",image:m,onClick:()=>t("toyota"),children:[a(e.SubmenuItem,{path:"supra",label:"supra",onClick:()=>t("supra")}),a(e.SubmenuItem,{path:"tundra",label:"tundra",onClick:()=>t("tundra")})]}),a(e.SubmenuItem,{path:"mazda",label:"mazda",image:m,onClick:()=>t("mazda")})]}),r(e.MenuItem,{path:"bands",label:"bands",position:"top",icon:"IconBunkerOutlined32",onClick:()=>t("bands"),children:[a(e.SubmenuItem,{path:"limp bizkit",label:"limp bizkit",onClick:()=>t("limp bizkit")}),r(e.SubmenuItem,{path:"slipknot",label:"slipknot",onClick:()=>t("slipknot"),children:[a(e.SubmenuItem,{path:"corey taylor",label:"corey taylor",onClick:()=>t("corey taylor")}),a(e.SubmenuItem,{path:"mick thompson",label:"mick thompson",onClick:()=>t("mick thompson")}),a(e.SubmenuItem,{path:"jim root",label:"jim root",onClick:()=>t("jim root")})]}),a(e.SubmenuItem,{path:"korn",label:"korn",onClick:()=>t("korn")})]}),a(e.MenuItem,{path:"menu item",label:"menu item",position:"top",icon:"IconLightningStroke32",onClick:()=>t("menu item")}),a(e.MenuItem,{path:"disabled item",label:"disabled item",position:"top",icon:"IconMapPinaltOutlined32",disabled:!0,onClick:()=>t("disabled item")}),r(e.MenuItem,{path:"lorem ipsum",label:"lorem ipsum",position:"bottom",icon:"IconInfoOutlined32",onClick:()=>t("lorem ipsum"),children:[a(e.SubmenuItem,{path:"dolor",label:"dolor",onClick:()=>t("dolor")}),a(e.SubmenuItem,{path:"sit",label:"sit",onClick:()=>t("sit")}),a(e.SubmenuItem,{path:"amet",label:"amet",onClick:()=>t("amet")})]})]},o.orientation)};n.storyName="Дефолтный сайдбар";n.args={userName:"Иван",userSurname:"Иванов",systemName:"НЛМК"};const i=o=>a(n,{variant:"burger",...o,onOpenUser:()=>{},onLogout:()=>{},onLogin:()=>{}});i.storyName="Вертикальный бургер";i.args={userName:"Иван",userSurname:"Иванов",systemName:"НЛМК"};const l=o=>a(n,{orientation:"horizontal",...o,onOpenUser:()=>{},onLogout:()=>{},onLogin:()=>{}});l.storyName="Горизонтальный сайдбар";l.args={userName:"Иван",userSurname:"Иванов",systemName:"НЛМК"};const s=o=>a(n,{orientation:"horizontal",variant:"burger",...o,onOpenUser:()=>{},onLogout:()=>{},onLogin:()=>{}});s.storyName="Горизонтальный бургер";s.args={userName:"Иван",userSurname:"Иванов",systemName:"НЛМК"};var b,c,d;n.parameters={...n.parameters,docs:{...(b=n.parameters)==null?void 0:b.docs,source:{originalSource:`(argTypes: ISidebarProps): JSX.Element => {
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [currentPath, setCurrentPath] = useState('');
  useEffect(() => setIsLoggedIn(Boolean(argTypes.isLoggedIn)), [argTypes.isLoggedIn]);
  return <Sidebar key={argTypes.orientation} orientation="vertical" allowFavorites {...argTypes} isLoggedIn={isLoggedIn} onLogout={() => setIsLoggedIn(false)} onLogin={() => setIsLoggedIn(true)} currentPath={currentPath}>
      <Sidebar.Avatar imageSrc="" />
      <Sidebar.MenuItem path="cars" label="cars" position="top" icon="IconKovsh32" onClick={() => setCurrentPath('cars')}>
        <Sidebar.SubmenuItem path="porsche" label="porsche" image={path} onClick={() => setCurrentPath('porsche')} />
        <Sidebar.SubmenuItem path="volksvagen" label="volksvagen" image={path} onClick={() => setCurrentPath('volksvagen')}>
          <Sidebar.SubmenuItem path="polo" label="polo" onClick={() => setCurrentPath('polo')} />
          <Sidebar.SubmenuItem path="tiguan" label="tiguan" onClick={() => setCurrentPath('tiguan')} />
          <Sidebar.SubmenuItem path="multivan" label="multivan" onClick={() => setCurrentPath('multivan')} disabled />
        </Sidebar.SubmenuItem>
        <Sidebar.SubmenuItem path="toyota" label="toyota" image={path} onClick={() => setCurrentPath('toyota')}>
          <Sidebar.SubmenuItem path="supra" label="supra" onClick={() => setCurrentPath('supra')} />
          <Sidebar.SubmenuItem path="tundra" label="tundra" onClick={() => setCurrentPath('tundra')} />
        </Sidebar.SubmenuItem>
        <Sidebar.SubmenuItem path="mazda" label="mazda" image={path} onClick={() => setCurrentPath('mazda')} />
      </Sidebar.MenuItem>
      <Sidebar.MenuItem path="bands" label="bands" position="top" icon="IconBunkerOutlined32" onClick={() => setCurrentPath('bands')}>
        <Sidebar.SubmenuItem path="limp bizkit" label="limp bizkit" onClick={() => setCurrentPath('limp bizkit')} />
        <Sidebar.SubmenuItem path="slipknot" label="slipknot" onClick={() => setCurrentPath('slipknot')}>
          <Sidebar.SubmenuItem path="corey taylor" label="corey taylor" onClick={() => setCurrentPath('corey taylor')} />
          <Sidebar.SubmenuItem path="mick thompson" label="mick thompson" onClick={() => setCurrentPath('mick thompson')} />
          <Sidebar.SubmenuItem path="jim root" label="jim root" onClick={() => setCurrentPath('jim root')} />
        </Sidebar.SubmenuItem>
        <Sidebar.SubmenuItem path="korn" label="korn" onClick={() => setCurrentPath('korn')} />
      </Sidebar.MenuItem>
      <Sidebar.MenuItem path="menu item" label="menu item" position="top" icon="IconLightningStroke32" onClick={() => setCurrentPath('menu item')} />
      <Sidebar.MenuItem path="disabled item" label="disabled item" position="top" icon="IconMapPinaltOutlined32" disabled onClick={() => setCurrentPath('disabled item')} />
      <Sidebar.MenuItem path="lorem ipsum" label="lorem ipsum" position="bottom" icon="IconInfoOutlined32" onClick={() => setCurrentPath('lorem ipsum')}>
        <Sidebar.SubmenuItem path="dolor" label="dolor" onClick={() => setCurrentPath('dolor')} />
        <Sidebar.SubmenuItem path="sit" label="sit" onClick={() => setCurrentPath('sit')} />
        <Sidebar.SubmenuItem path="amet" label="amet" onClick={() => setCurrentPath('amet')} />
      </Sidebar.MenuItem>
    </Sidebar>;
}`,...(d=(c=n.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};var h,S,g;i.parameters={...i.parameters,docs:{...(h=i.parameters)==null?void 0:h.docs,source:{originalSource:`(argTypes: ISidebarProps): ReactNode => {
  return <SidebarDefault variant="burger" {...argTypes} onOpenUser={() => {}} onLogout={() => {}} onLogin={() => {}} />;
}`,...(g=(S=i.parameters)==null?void 0:S.docs)==null?void 0:g.source}}};var I,k,C;l.parameters={...l.parameters,docs:{...(I=l.parameters)==null?void 0:I.docs,source:{originalSource:`(argTypes: ISidebarProps): ReactNode => {
  return <SidebarDefault orientation="horizontal" {...argTypes} onOpenUser={() => {}} onLogout={() => {}} onLogin={() => {}} />;
}`,...(C=(k=l.parameters)==null?void 0:k.docs)==null?void 0:C.source}}};var y,P,v;s.parameters={...s.parameters,docs:{...(y=s.parameters)==null?void 0:y.docs,source:{originalSource:`(argTypes: ISidebarProps): ReactNode => {
  return <SidebarDefault orientation="horizontal" variant="burger" {...argTypes} onOpenUser={() => {}} onLogout={() => {}} onLogin={() => {}} />;
}`,...(v=(P=s.parameters)==null?void 0:P.docs)==null?void 0:v.source}}};const Q=["SidebarDefault","VerticalBurgerSidebar","SidebarHorizontal","HorizontalBurgerSidebar"];export{s as HorizontalBurgerSidebar,n as SidebarDefault,l as SidebarHorizontal,i as VerticalBurgerSidebar,Q as __namedExportsOrder,Y as default};
